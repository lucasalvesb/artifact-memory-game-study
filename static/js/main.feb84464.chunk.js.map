{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","src","alt","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","resetTurn","setTimeout","console","log","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAIe,SAASA,EAAT,GAAgE,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SAQ9D,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACI,qBAAKE,UAAU,QAAQC,IAAKL,EAAKK,IAAKC,IAAI,eAC1C,qBACAF,UAAU,OACVC,IAAI,eACJE,QAdQ,WACXJ,GACDF,EAAaD,IAaTM,IAAI,mBCfpB,IAAME,EAAa,CACjB,CAAE,IAAO,8BAA+BC,SAAS,GACjD,CAAE,IAAO,6BAA8BA,SAAS,GAChD,CAAE,IAAO,2BAA4BA,SAAS,GAC9C,CAAE,IAAO,kCAAmCA,SAAS,GACrD,CAAE,IAAO,gCAAiCA,SAAS,GACnD,CAAE,IAAO,8BAA+BA,SAAS,IAuFpCC,MApFf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAU,GAApC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkCN,mBAAS,MAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KACA,EAAgCR,oBAAS,GAAzC,mBAAOR,EAAP,KAAiBiB,EAAjB,KAGMC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAeA,GACtCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAC1B,GAAD,mBAAC,eAAcA,GAAf,IAAqB2B,GAAIH,KAAKC,cAEnCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAKPd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IAIhD4B,qBAAU,WAEJZ,GAAaE,IACfE,GAAY,GACRJ,EAAUX,MAAQa,EAAUb,KAC9BQ,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAIA,EAAKK,MAAQW,EAAUX,IAClB,2BAAIL,GAAX,IAAiBS,SAAS,IAEnBT,QAIb8B,KAGAC,YAAW,kBAAMD,MAAa,QAGjC,CAACd,EAAWE,IAEfc,QAAQC,IAAIrB,GAGZ,IAAMkB,EAAY,WAChBb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAmB,GAAS,OAAIA,EAAY,KAClCd,GAAY,IAQd,OAJAQ,qBAAW,WACTP,MACC,IAGD,sBAAKjB,UAAU,MAAf,UACE,sDACA,wBAAQG,QAASc,EAAjB,sBACA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GAAI,OACf,cAAC,EAAD,CAEAA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAASgB,GAAahB,IAASkB,GAAalB,EAAKS,QAC1DN,SAAUA,GAJLH,EAAK2B,SAQZ,wCAAWb,SCxFjBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.feb84464.chunk.js","sourcesContent":["\r\nimport './SingleCard.css'\r\n\r\n\r\nexport default function SingleCard({ card, handleChoice, flipped, disabled }) {\r\n    const handleClick = () => { \r\n        if (!disabled) {\r\n            handleChoice(card)\r\n        }\r\n        \r\n    }\r\n\r\n    return (     \r\n        <div className=\"card\">  \r\n            <div className={flipped ? \"flipped\" : \"\"}>\r\n                <img className=\"front\" src={card.src} alt=\"card front\" />\r\n                <img \r\n                className=\"back\" \r\n                src=\"img/back.png\" \r\n                onClick={handleClick} \r\n                alt=\"card back\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import './App.css'\r\nimport { useState } from 'react'\r\nimport SingleCard from './components/SingleCard'\r\nimport { useEffect } from 'react'\r\n\r\nconst cardImages = [\r\n  { \"src\": \"img/abyssm-flesh-render.png\", matched: false},\r\n  { \"src\": \"img/arclight-elemental.png\", matched: false},\r\n  { \"src\": \"img/assassins-shadow.png\", matched: false},\r\n  { \"src\": \"img/berserker-of-the-abyssm.png\", matched: false},\r\n  { \"src\": \"img/disciple-of-nevermore.png\", matched: false},\r\n  { \"src\": \"img/greevil-shenanigans.png\", matched: false}\r\n]\r\n\r\nfunction App() {\r\n\r\n  const [cards, setCards] = useState([])\r\n  const [turns, setTurns] = useState (0)\r\n  const [choiceOne, setChoiceOne] = useState(null)\r\n  const [choiceTwo, setChoiceTwo] = useState(null)\r\n  const [disabled, setDisabled] = useState(false)\r\n\r\n  // shuffle cards\r\n  const shuffleCards = () => {\r\n    const shuffledCards = [...cardImages, ...cardImages]\r\n      .sort(() => Math.random() - 0.5) \r\n      .map((card) => ({...card, id: Math.random() }))\r\n\r\n      setChoiceOne(null)\r\n      setChoiceTwo(null)\r\n      setCards(shuffledCards)\r\n      setTurns(0)\r\n  }\r\n\r\n  // handle a choice\r\n\r\n  const handleChoice = (card) => {\r\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card)\r\n  }\r\n\r\n  // compare 2 selected cards\r\n  useEffect(() => {\r\n    \r\n    if (choiceOne && choiceTwo) {\r\n      setDisabled(true)\r\n      if (choiceOne.src === choiceTwo.src) {\r\n        setCards(prevCards => {\r\n          return prevCards.map(card => {\r\n            if (card.src === choiceOne.src) {\r\n              return {...card, matched: true}\r\n            } else {\r\n              return card\r\n            }\r\n          })\r\n        })\r\n        resetTurn()\r\n      } else {\r\n        \r\n        setTimeout(() => resetTurn(), 1000)\r\n      }\r\n    }\r\n  }, [choiceOne, choiceTwo])\r\n  \r\n  console.log(cards)\r\n\r\n  // reset choices & increase turn\r\n  const resetTurn = () => {\r\n    setChoiceOne(null)\r\n    setChoiceTwo(null)\r\n    setTurns(prevTurns => prevTurns + 1)\r\n    setDisabled(false)\r\n  }\r\n\r\n// start a new game automatically\r\n  useEffect (() => {\r\n    shuffleCards()\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Artifact Memory Game</h1>\r\n      <button onClick={shuffleCards}>New game</button>\r\n      <div className=\"card-grid\"> \r\n        {cards.map(card => (\r\n        <SingleCard \r\n        key={card.id} \r\n        card={card}\r\n        handleChoice={handleChoice}\r\n        flipped={card === choiceOne || card === choiceTwo || card.matched}\r\n        disabled={disabled}\r\n        />\r\n      ))}\r\n      </div>\r\n      <p>Turns: {turns}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}